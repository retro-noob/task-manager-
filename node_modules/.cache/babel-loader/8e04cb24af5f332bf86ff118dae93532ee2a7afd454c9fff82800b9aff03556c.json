{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\diary\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:8080\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // GET  ALL NOTE :FUNCTION\n\n  const getNotes = async () => {\n    // API call (TODO)\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"authtoken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNkODAzZTU5NTdiMDM0OGE0ZTg5NGM4In0sImlhdCI6MTY3NTEwMTE4NH0.e2IXucJKr0Fas_p5CMlK2KpIAVA4JQa-11ZKRxucIos\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  // ADD  A NOTE :FUNCTION\n\n  const addNote = async (title, description, tag) => {\n    // IMPORTANT user auth token k throufh baad m lena h \n\n    // API call (TODO)\n    const response = await fetch(`${host}/api/notes/addnote}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"authtoken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNkODAzZTU5NTdiMDM0OGE0ZTg5NGM4In0sImlhdCI6MTY3NTEwMTE4NH0.e2IXucJKr0Fas_p5CMlK2KpIAVA4JQa-11ZKRxucIos\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      }) // body data type must match \"Content-Type\" header\n    });\n\n    const json = await response.json();\n    console.log(json);\n    console.log(\"Adding a new note\");\n    const note = {\n      \"_id\": \"63b47f803718ab05e1b5477e\",\n      \"user\": \"63b47f153718ab05e1b54779\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2023-01-03T19:18:24.610Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(note)); // notes array m push kra note ko uske baad notestate ko update concat returns a array push update an array\n  };\n\n  // DELETE  A NOTE :FUNCTION\n  const deleteNote = async id => {\n    //API CALL \n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        \"authtoken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNkODAzZTU5NTdiMDM0OGE0ZTg5NGM4In0sImlhdCI6MTY3NTEwMTE4NH0.e2IXucJKr0Fas_p5CMlK2KpIAVA4JQa-11ZKRxucIos\"\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    console.log(\"Deleting the note with id\" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  // EDIT  A NOTE :FUNCTION\n  const editNote = async (id, title, description, tag) => {\n    //API calls\n\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        \"authtoken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNkODAzZTU5NTdiMDM0OGE0ZTg5NGM4In0sImlhdCI6MTY3NTEwMTE4NH0.e2IXucJKr0Fas_p5CMlK2KpIAVA4JQa-11ZKRxucIos\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      }) // body data type must match \"Content-Type\" header\n    });\n\n    const json = response.json();\n    console.log(json);\n\n    //Logic for EDIT in client\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"kcLCFxdGUyyZC425it31q7Gz3x8=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","NoteContext","NoteState","props","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","index","length","element","children"],"sources":["C:/Users/LENOVO/diary/src/context/notes/NoteState.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";  \r\nimport NoteContext from \"./noteContext\";\r\n\r\nconst NoteState=(props)=>{\r\n const host =\"http://localhost:8080\"\r\n    const notesInitial=[]\r\n const [notes ,setNotes ] = useState(notesInitial);\r\n\r\n// GET  ALL NOTE :FUNCTION\r\n\r\nconst getNotes=async()=>{       \r\n \r\n  // API call (TODO)\r\nconst response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n  method: 'GET', \r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    \r\n      \"authtoken\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNkODAzZTU5NTdiMDM0OGE0ZTg5NGM4In0sImlhdCI6MTY3NTEwMTE4NH0.e2IXucJKr0Fas_p5CMlK2KpIAVA4JQa-11ZKRxucIos\"\r\n    \r\n}\r\n \r\n  \r\n});\r\nconst json = await response.json()\r\nconsole.log(json)\r\nsetNotes(json)\r\n\r\n\r\n }\r\n\r\n  \r\n// ADD  A NOTE :FUNCTION\r\n\r\n const addNote = async(title,description,tag)=>{      // IMPORTANT user auth token k throufh baad m lena h \r\n \r\n  // API call (TODO)\r\nconst response = await fetch(`${host}/api/notes/addnote}`, {\r\n  method: 'POST', \r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n     \"authtoken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNkODAzZTU5NTdiMDM0OGE0ZTg5NGM4In0sImlhdCI6MTY3NTEwMTE4NH0.e2IXucJKr0Fas_p5CMlK2KpIAVA4JQa-11ZKRxucIos\"\r\n    \r\n   \r\n  },\r\n \r\n  body: JSON.stringify({title,description,tag}) // body data type must match \"Content-Type\" header\r\n});\r\n\r\nconst json=await response.json()\r\nconsole.log(json)\r\n\r\n\r\n  console.log(\"Adding a new note\")\r\n \r\n\r\n   const note=   {\r\n \r\n\r\n  \"_id\": \"63b47f803718ab05e1b5477e\",\r\n  \"user\": \"63b47f153718ab05e1b54779\",  \r\n  \"title\": title,\r\n  \"description\": description,\r\n  \"tag\": tag,\r\n  \"date\": \"2023-01-03T19:18:24.610Z\",\r\n  \"__v\": 0\r\n};\r\nsetNotes(notes.concat(note)) // notes array m push kra note ko uske baad notestate ko update concat returns a array push update an array\r\n\r\n }\r\n\r\n\r\n\r\n\r\n// DELETE  A NOTE :FUNCTION\r\nconst deleteNote= async (id)=>{\r\n\r\n//API CALL \r\nconst response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n  method: 'DELETE', \r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    \"authtoken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNkODAzZTU5NTdiMDM0OGE0ZTg5NGM4In0sImlhdCI6MTY3NTEwMTE4NH0.e2IXucJKr0Fas_p5CMlK2KpIAVA4JQa-11ZKRxucIos\"\r\n   \r\n  }\r\n});\r\nconst json =response.json();\r\nconsole.log(json)\r\n\r\n\r\nconsole.log(\"Deleting the note with id\" + id);\r\nconst newNotes = notes.filter((note) => { return note._id !== id })\r\nsetNotes(newNotes)\r\n}\r\n\r\n\r\n\r\n// EDIT  A NOTE :FUNCTION\r\nconst editNote=async (id,title,description,tag)=>{\r\n//API calls\r\n\r\nconst response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n  method: 'PUT', \r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n     \"authtoken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjNkODAzZTU5NTdiMDM0OGE0ZTg5NGM4In0sImlhdCI6MTY3NTEwMTE4NH0.e2IXucJKr0Fas_p5CMlK2KpIAVA4JQa-11ZKRxucIos\"\r\n    \r\n   \r\n  },\r\n \r\n  body: JSON.stringify({title,description,tag}) // body data type must match \"Content-Type\" header\r\n});\r\nconst json =response.json();\r\nconsole.log(json)\r\n\r\n\r\n  //Logic for EDIT in client\r\n  for (let index = 0; index < notes.length; index++) {\r\n    const element = notes[index];\r\n    if(element._id===id){\r\n      element.title=title;\r\n      element.description=description;\r\n      element.tag=tag;\r\n    }\r\n    \r\n  }\r\n  \r\n}\r\n\r\n\r\nreturn( \r\n    <NoteContext.Provider  value ={{notes,addNote,deleteNote,editNote,getNotes}}>\r\n{props.children}\r\n    </NoteContext.Provider>\r\n)\r\n\r\n}\r\n\r\nexport default NoteState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}